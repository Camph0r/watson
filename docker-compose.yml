version: '3.8'

services:
  aggregator:
    build:
      context: ./aggregator
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "9080:9080"
    environment:
      - AGGREGATOR_PORT=${AGGREGATOR_PORT}
      - AGGREGATOR_CERT_FILE=/app/certs/server.crt
      - AGGREGATOR_KEY_FILE=/app/certs/server.key
      - AGGREGATOR_CA_CERT_FILE=/app/certs/ca.crt
      - AGGREGATOR_INFLUX_URL=http://influxdb:8086
      - AGGREGATOR_INFLUX_TOKEN=${INFLUX_TOKEN}
      - AGGREGATOR_INFLUX_ORG=${INFLUX_ORG}
      - AGGREGATOR_INFLUX_BUCKET=${INFLUX_BUCKET}
    volumes:
      - ./aggregator/certs:/app/certs
    networks:
      - watson-net
    depends_on:
      influxdb:
        condition: service_healthy

  influxdb:
    image: influxdb:2
    env_file:
      - .env
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    volumes:
      - influxdb-data:/var/lib/influxdb2
    networks:
      - watson-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 10s
      retries: 5

networks:
  watson-net:
    driver: bridge

volumes:
  influxdb-data:
